// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OnlineHelpSystem.Data;

namespace OnlineHelpSystem.Migrations
{
    [DbContext(typeof(myDBContext))]
    [Migration("20200406140253_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("OnlineHelpSystem.Models.Assignment", b =>
                {
                    b.Property<string>("AssignmentId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AssignmentName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AssignmentNumber")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AssignmentId");

                    b.ToTable("Assignment");
                });

            modelBuilder.Entity("OnlineHelpSystem.Models.Course", b =>
                {
                    b.Property<string>("CourseId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Semester")
                        .HasColumnType("int");

                    b.HasKey("CourseId");

                    b.ToTable("Course");
                });

            modelBuilder.Entity("OnlineHelpSystem.Models.Exercise", b =>
                {
                    b.Property<string>("Lecture")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Number")
                        .HasColumnType("int");

                    b.Property<string>("CourseExerciseId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("HelpWhere")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StudentExerciseId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("TeacherExerciseId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Lecture", "Number");

                    b.HasIndex("CourseExerciseId");

                    b.HasIndex("StudentExerciseId");

                    b.HasIndex("TeacherExerciseId");

                    b.ToTable("Exercise");
                });

            modelBuilder.Entity("OnlineHelpSystem.Models.Student", b =>
                {
                    b.Property<string>("AuId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AuId");

                    b.ToTable("Student");
                });

            modelBuilder.Entity("OnlineHelpSystem.Models.StudentAssignment", b =>
                {
                    b.Property<string>("StudentAssignmentId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AssignmentId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("StudentAuId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("StudentAssignmentId");

                    b.HasIndex("AssignmentId");

                    b.HasIndex("StudentAuId");

                    b.ToTable("StudentAssignment");
                });

            modelBuilder.Entity("OnlineHelpSystem.Models.StudentCourse", b =>
                {
                    b.Property<string>("StudentCourseId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("CourseId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Semester")
                        .HasColumnType("int");

                    b.Property<string>("StudentAuId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("StudentCourseId");

                    b.HasIndex("StudentAuId");

                    b.ToTable("StudentCourse");
                });

            modelBuilder.Entity("OnlineHelpSystem.Models.Teacher", b =>
                {
                    b.Property<string>("AuId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AuId");

                    b.ToTable("Teacher");
                });

            modelBuilder.Entity("OnlineHelpSystem.Models.Assignment", b =>
                {
                    b.HasOne("OnlineHelpSystem.Models.Teacher", "Teacher")
                        .WithMany("Assignments")
                        .HasForeignKey("AssignmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OnlineHelpSystem.Models.Course", "Course")
                        .WithMany("Assignments")
                        .HasForeignKey("AssignmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("OnlineHelpSystem.Models.Exercise", b =>
                {
                    b.HasOne("OnlineHelpSystem.Models.Course", "Course")
                        .WithMany("Exercises")
                        .HasForeignKey("CourseExerciseId");

                    b.HasOne("OnlineHelpSystem.Models.Student", "Student")
                        .WithMany("Exercises")
                        .HasForeignKey("StudentExerciseId");

                    b.HasOne("OnlineHelpSystem.Models.Teacher", "Teacher")
                        .WithMany("Exercises")
                        .HasForeignKey("TeacherExerciseId");
                });

            modelBuilder.Entity("OnlineHelpSystem.Models.StudentAssignment", b =>
                {
                    b.HasOne("OnlineHelpSystem.Models.Assignment", "Assignment")
                        .WithMany("StudentAssignments")
                        .HasForeignKey("AssignmentId");

                    b.HasOne("OnlineHelpSystem.Models.Student", "Student")
                        .WithMany("StudentAssignments")
                        .HasForeignKey("StudentAuId");
                });

            modelBuilder.Entity("OnlineHelpSystem.Models.StudentCourse", b =>
                {
                    b.HasOne("OnlineHelpSystem.Models.Student", "Student")
                        .WithMany("StudentCourses")
                        .HasForeignKey("StudentAuId");

                    b.HasOne("OnlineHelpSystem.Models.Course", "Course")
                        .WithMany("StudentCourses")
                        .HasForeignKey("StudentCourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("OnlineHelpSystem.Models.Teacher", b =>
                {
                    b.HasOne("OnlineHelpSystem.Models.Course", "Course")
                        .WithMany("Teachers")
                        .HasForeignKey("AuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
